
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.5
  creationTimestamp: null
  name: pipelines.devops.kubesphere.io
spec:
  group: devops.kubesphere.io
  names:
    kind: Pipeline
    listKind: PipelineList
    plural: pipelines
    singular: pipeline
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Pipeline is the Schema for the pipelines API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: PipelineSpec defines the desired state of Pipeline
          properties:
            name:
              description: Name is the pipeline name for reference.
              type: string
            tasks:
              description: Tasks is the content definition of the pipeline.
              items:
                description: TaskSpec defines the content of the task
                properties:
                  name:
                    description: Name is the task name for reference.
                    type: string
                  need:
                    description: Need is to define the execution order
                    items:
                      type: string
                    type: array
                  steps:
                    description: Steps define executing steps
                    items:
                      description: Step defines the content of the step
                      properties:
                        args:
                          description: 'Arguments to the entrypoint. The docker image''s
                            CMD is used if this is not provided. Variable references
                            $(VAR_NAME) are expanded using the container''s environment.
                            If a variable cannot be resolved, the reference in the
                            input string will be unchanged. The $(VAR_NAME) syntax
                            can be escaped with a double $$, ie: $$(VAR_NAME). Escaped
                            references will never be expanded, regardless of whether
                            the variable exists or not. Cannot be updated. More info:
                            https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        command:
                          description: 'Entrypoint array. Not executed within a shell.
                            The docker image''s ENTRYPOINT is used if this is not
                            provided. Variable references $(VAR_NAME) are expanded
                            using the container''s environment. If a variable cannot
                            be resolved, the reference in the input string will be
                            unchanged. The $(VAR_NAME) syntax can be escaped with
                            a double $$, ie: $$(VAR_NAME). Escaped references will
                            never be expanded, regardless of whether the variable
                            exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        image:
                          description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images
                            This field is optional to allow higher level config management
                            to default or override container images in workload controllers
                            like Deployments and StatefulSets.'
                          type: string
                        name:
                          description: Name of the container specified as a DNS_LABEL.
                            Each container in a pod must have a unique name (DNS_LABEL).
                            Cannot be updated.
                          type: string
                        script:
                          description: "Script is the contents of an executable file
                            to execute. \n If Script is not empty, the Step cannot
                            have an Command and the Args will be passed to the Script."
                          type: string
                        workspace:
                          description: "This is an alpha field. You must set the \"enable-api-fields\"
                            feature flag to \"alpha\" for this field to be supported.
                            \n Workspaces is a list of workspaces from the Task that
                            this Step wants exclusive access to. Adding a workspace
                            to this list means that any other Step or Sidecar that
                            does not also request this Workspace will not have access
                            to it."
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  uses:
                    description: Uses is the task template name, which is predefined
                      in the cluster
                    type: string
                  with:
                    additionalProperties:
                      type: string
                    description: With is params passed to the task template
                    type: object
                required:
                - name
                type: object
              type: array
          required:
          - name
          type: object
        status:
          description: PipelineStatus defines the observed state of Pipeline
          type: object
      type: object
  version: v1alpha3
  versions:
  - name: v1alpha3
    served: true
    storage: false
  - name: v2alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
